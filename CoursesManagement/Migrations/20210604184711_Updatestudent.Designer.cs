// <auto-generated />
using System;
using CoursesManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoursesManagement.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20210604184711_Updatestudent")]
    partial class Updatestudent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoursesManagement.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditUnits")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instructor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = 1050,
                            CourseDescription = "Interesting course",
                            CourseName = "Chemistry",
                            CreditUnits = 3,
                            DateCreated = new DateTime(2000, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Instructor = " John Smith"
                        },
                        new
                        {
                            CourseID = 4022,
                            CourseDescription = "Interesting course",
                            CourseName = "Microeconomics",
                            CreditUnits = 3,
                            DateCreated = new DateTime(1997, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Instructor = " karen Smith"
                        },
                        new
                        {
                            CourseID = 4041,
                            CourseDescription = "Interesting course",
                            CourseName = "Macroeconomics",
                            CreditUnits = 3,
                            DateCreated = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Instructor = " David North"
                        },
                        new
                        {
                            CourseID = 1045,
                            CourseDescription = "Interesting course",
                            CourseName = "Calculus",
                            CreditUnits = 4,
                            DateCreated = new DateTime(2001, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Instructor = " Ryan Reynolds"
                        },
                        new
                        {
                            CourseID = 3141,
                            CourseDescription = "Interesting course",
                            CourseName = "Trigonometry",
                            CreditUnits = 4,
                            DateCreated = new DateTime(2000, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Instructor = " John Lewis"
                        },
                        new
                        {
                            CourseID = 2021,
                            CourseDescription = "Interesting course",
                            CourseName = "Composition",
                            CreditUnits = 3,
                            DateCreated = new DateTime(1990, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Instructor = " West North"
                        },
                        new
                        {
                            CourseID = 2042,
                            CourseDescription = "Interesting course",
                            CourseName = "Literature",
                            CreditUnits = 4,
                            DateCreated = new DateTime(2003, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Instructor = " Allice West"
                        });
                });

            modelBuilder.Entity("CoursesManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdvisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("CourseID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            AdvisorName = "Shou las",
                            CourseID = 3141,
                            DateCreated = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "lois@gmail.com",
                            StudentName = "Carson Alexander",
                            StudentPhone = "111-458-36584"
                        },
                        new
                        {
                            StudentID = 2,
                            AdvisorName = "Shou las",
                            CourseID = 1045,
                            DateCreated = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "lois@gmail.com",
                            StudentName = "Meredith Alonso",
                            StudentPhone = "111-458-36584"
                        },
                        new
                        {
                            StudentID = 3,
                            AdvisorName = "Shou las",
                            CourseID = 4041,
                            DateCreated = new DateTime(2003, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "lois@gmail.com",
                            StudentName = "Arturo Anand",
                            StudentPhone = "111-458-36584"
                        },
                        new
                        {
                            StudentID = 4,
                            AdvisorName = "Shou las",
                            CourseID = 4022,
                            DateCreated = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "lois@gmail.com",
                            StudentName = "Gytis Barzdukas",
                            StudentPhone = "111-458-36584"
                        },
                        new
                        {
                            StudentID = 5,
                            AdvisorName = "Shou las",
                            CourseID = 1050,
                            DateCreated = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "lois@gmail.com",
                            StudentName = "Yan Li",
                            StudentPhone = "111-458-36584"
                        });
                });

            modelBuilder.Entity("CoursesManagement.Models.Student", b =>
                {
                    b.HasOne("CoursesManagement.Models.Course", "CoursesRegistered")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesRegistered");
                });
#pragma warning restore 612, 618
        }
    }
}
